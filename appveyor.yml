# appveyor.yml
# 
# vim: sw=2 ts=2 et
#

version: 0.1.{build}

environment:
  #RUST_TARGET: x86_64-pc-windows-gnu
  #RUST_VERSION: 1.1.0
  HDF5_LIBDIR: C:\hdf5_bin

  matrix:
    - RUST_VERSION: 1.1.0
      RUST_TARGET: x86_64-pc-windows-gnu
    - RUST_VERSION: nightly
      RUST_TARGET: x86_64-pc-windows-gnu
    - RUST_VERSION: nightly
      RUST_TARGET: x86_64-pc-windows-msvc

install:
  # get rust & cargo
  - ps: Start-FileDownload "https://static.rust-lang.org/dist/rust-${env:RUST_VERSION}-${env:RUST_TARGET}.exe"
  - rust-%RUST_VERSION%-%RUST_TARGET%.exe /VERYSILENT /NORESTART /DIR="C:\Program Files\Rust-%RUST_VERSION%-%RUST_TARGET%"
  - set PATH=%PATH%;C:\Program Files\Rust-%RUST_VERSION%-%RUST_TARGET%\bin
#- ps: if($env:RUST_TARGET -match "msvc") { & 'C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall.bat' x64 }
  - ps: if($env:RUST_TARGET -match "msvc") { & '"C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64' }

  # get hdf5 binary (just get a prebuild binary for now)
  - mkdir C:\hdf5_bin
  - ps: Invoke-WebRequest "https://github.com/kkirstein/hdf5-rs/releases/download/alpha/hdf5.dll" -OutFile "C:\hdf5_bin\hdf5.dll"
  - set PATH=C:\hdf5_bin;%PATH%

  # output version info
  - rustc --version
  - cargo --version

build: false

test_script:
  - cargo test --verbose

